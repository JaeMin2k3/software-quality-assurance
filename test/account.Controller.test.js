const request = require('supertest');
const mongoose = require('mongoose');
require('dotenv').config({ path: '.env.test' }); // D√πng bi·∫øn m√¥i tr∆∞·ªùng test
const app = require('../index');

const Account = require('../model/accounts.model');

// üîÅ MOCK middleware uploadCloud (b·ªè qua n·∫øu kh√¥ng c√≥ ·∫£nh)
jest.mock('../middlewares/admin/ulpoadCloud.middleware', () => ({
  upload: (req, res, next) => next()
}));

describe('Accounts Controller Integration Test', () => {
  beforeAll(async () => {
    await mongoose.connect(process.env.mongoURL, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
  });

  afterAll(async () => {
    await mongoose.connection.close();
  });

  afterEach(async () => {
    await Account.deleteMany({ email: /integration_test/ });
  });

  /**
   * TC_ACC_001 - T·∫°o account m·ªõi th√†nh c√¥ng
   */
  test('TC_ACC_001 - T·∫°o account m·ªõi th√†nh c√¥ng', async () => {
    const res = await request(app)
      .post('/admin/accounts/create')
      .type('form') // ‚ö†Ô∏è Quan tr·ªçng n·∫øu b·∫°n kh√¥ng d√πng .attach()
      .send({
        email: 'integration_test@mail.com',
        password: '123456',
        role_id: '64abcedf1234567890abcdef' // c·∫ßn l√† role c√≥ th·∫≠t
      });

    expect(res.status).toBe(302); // Redirect sau khi th√†nh c√¥ng

    const account = await Account.findOne({ email: 'integration_test@mail.com' });
    expect(account).not.toBeNull(); // ƒê·∫£m b·∫£o ƒë√£ t·∫°o th√†nh c√¥ng
  });

  /**
   * TC_ACC_002 - Kh√¥ng t·∫°o account n·∫øu email ƒë√£ t·ªìn t·∫°i
   */
  test('TC_ACC_002 - Kh√¥ng t·∫°o account n·∫øu email ƒë√£ t·ªìn t·∫°i', async () => {
    // T·∫°o tr∆∞·ªõc 1 account
    await Account.create({
      email: 'integration_test@mail.com',
      password: 'hashed',
      role_id: '64abcedf1234567890abcdef'
    });

    const res = await request(app)
      .post('/admin/accounts/create')
      .type('form')
      .send({
        email: 'integration_test@mail.com',
        password: '123456',
        role_id: '64abcedf1234567890abcdef'
      });

    expect(res.status).toBe(302); // V·∫´n redirect nh∆∞ng kh√¥ng t·∫°o m·ªõi

    const count = await Account.countDocuments({ email: 'integration_test@mail.com' });
    expect(count).toBe(1); // Kh√¥ng th√™m tr√πng
  });
});
